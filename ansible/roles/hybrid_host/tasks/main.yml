- name: Ensure packages
  become: yes
  apt: { name: ["nginx","curl","openssl"], state: present, update_cache: yes }

- name: Work dir
  become: yes
  file: { path: /opt/pki-client, state: directory, mode: "0755" }

- name: Private key
  become: yes
  command: openssl genrsa -out /opt/pki-client/key.pem 2048
  args: { creates: /opt/pki-client/key.pem }

- name: CSR
  become: yes
  shell: >
    openssl req -new -key /opt/pki-client/key.pem -out /opt/pki-client/req.csr
    -subj "/CN={{ pki_cn | default('host1.internal.example') }}"
  args: { creates: /opt/pki-client/req.csr }

- name: Sign CSR
  uri:
    url: "{{ pki_api_url | default('http://localhost:30001') }}/csr/sign"
    method: POST
    body_format: json
    body:
      csr_pem: "{{ lookup('file','/opt/pki-client/req.csr') }}"
      validity: "24h"
      common_name: "{{ pki_cn | default('host1.internal.example') }}"
      sans: ["{{ pki_cn | default('host1.internal.example') }}" ]
    return_content: yes
  register: sign_resp

- name: Write cert
  become: yes
  copy: { dest: /opt/pki-client/cert.pem, content: "{{ sign_resp.json.certificate | default('') }}" }
  when: sign_resp.status == 200

- name: Nginx site
  become: yes
  template: { src: nginx.conf.j2, dest: /etc/nginx/sites-available/pki-demo }

- name: Enable site
  become: yes
  file: { src: /etc/nginx/sites-available/pki-demo, dest: /etc/nginx/sites-enabled/pki-demo, state: link, force: yes }

- name: Restart nginx
  become: yes
  service: { name: nginx, state: restarted }
