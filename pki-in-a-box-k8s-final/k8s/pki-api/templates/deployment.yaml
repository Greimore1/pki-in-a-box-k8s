apiVersion: apps/v1
kind: Deployment
metadata: { name: pki-api, namespace: pki }
spec:
  replicas: 1
  selector: { matchLabels: { app: pki-api } }
  template:
    metadata: { labels: { app: pki-api } }
    spec:
      containers:
      - name: pki-api
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports: [ { name: http, containerPort: 8080 } ]
        env:
        - { name: STEP_CA_URL, value: "{{ .Values.env.STEP_CA_URL }}" }
        - { name: STEP_PROVISIONER, value: "{{ .Values.env.STEP_PROVISIONER }}" }
        - name: STEP_PROVISIONER_PASSWORD
          valueFrom: { secretKeyRef: { name: pki-api-secrets, key: STEP_PROVISIONER_PASSWORD } }
        - { name: POLICY_DOMAIN_SUFFIX, value: "{{ .Values.env.POLICY_DOMAIN_SUFFIX }}" }
        readinessProbe:
          httpGet: { path: /healthz, port: 8080 }
          periodSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
---
apiVersion: v1
kind: Service
metadata: { name: pki-api, namespace: pki }
spec:
  selector: { app: pki-api }
  type: {{ .Values.service.type }}
  ports:
  - { name: http, port: {{ .Values.service.port }}, targetPort: 8080, nodePort: {{ .Values.service.nodePort }} }
